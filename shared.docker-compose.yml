version: "3.9"

networks:
  default:
    name: dev-infra
    # docker network create dev-infra
    external: true

volumes:
  sonar-data:
  sonar-logs:
  sonar-exts:
  sonar-db:
  openldap_data:

services:

  # Zookeeper standalone
  zookeeper:
    platform: linux/amd64
    image: wurstmeister/zookeeper:latest
    networks:
      default:
        aliases:
          - zookeeper.local
    ports:
      - 2181:2181
    restart: unless-stopped

  # Kafka standalone
  kafka:
    platform: linux/amd64
    image: wurstmeister/kafka:latest
    environment: # reference config
      KAFKA_ZOOKEEPER_CONNECT: zookeeper.local:2181
      KAFKA_ADVERTISED_HOST_NAME: kafka.local
    networks:
      default:
        aliases:
          - kafka.local
    ports:
      - 9092:9092
    restart: unless-stopped
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - 9103:8080
    environment: # reference config
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka.local:9092
      # KAFKA_CLUSTERS_1_NAME: zrk
      # KAFKA_CLUSTERS_1_BOOTSTRAPSERVERS: zrk.dev-infra:9092
      # DYNAMIC_CONFIG_ENABLED: 'true'
    # volumes:
    #   - ~/kui/config.yml:/etc/kafkaui/dynamic_config.yaml

  # Redis standalone
  redis:
    platform: linux/amd64
    image: redis:alpine
    networks:
      default:
        aliases:
          - redis.local
    ports:
      - 6379:6379
    restart: unless-stopped

  plantuml:
    image: plantuml/plantuml-server:jetty
    ports:
      - 9999:8080
    restart: unless-stopped
    # environment: # reference config
    #   BASE_URL: ROOT
    #   PLANTUML_LIMIT_SIZE: 4096
    #   PLANTUML_STATS: 'off'
    #   HTTP_AUTHORIZATION: 'null'
    #   ALLOW_PLANTUML_INCLUDE: 'false'

  sonar:
    # image: sonarqube:lts-community
    image: sonarqube:lts-developer
    ports:
      - 9000:9000
    restart: unless-stopped
    stop_grace_period: 1m30s
    # sysctl: see .wslconfig
    ulimits:
      nproc: 8192
      nofile: 131072
    environment: # reference config
      # database
      SONAR_JDBC_URL: jdbc:postgresql://sonarqube.local:5432/sonarqube
      SONAR_JDBC_USERNAME: root
      SONAR_JDBC_PASSWORD: toor
      # ldap integration
      SONAR_SECURITY_REALM: LDAP
      SONAR_AUTHENTICATOR_DOWNCASE: true
      LDAP_URL: ldap://openldap.local:1389
      LDAP_USER_BASEDN: dc=dev-infra,dc=local
      LDAP_USER_REQUEST: mail={login}
      LDAP_USER_REALNAMEATTRIBUTE: displayname
      LDAP_USER_EMAILATTRIBUTE: mail
      LDAP_BINDDN: cn=root,dc=dev-infra,dc=local
      LDAP_BINDPASSWORD: toor
    volumes:
      - sonar-data:/opt/sonarqube/data
      - sonar-logs:/opt/sonarqube/logs
      - sonar-exts:/opt/sonarqube/extensions
  sonardb:
    image: postgres:15-alpine
    networks:
      default:
        aliases:
          - sonarqube.local
    ports:
      - 5432:5432
    restart: unless-stopped
    environment: # reference config
      POSTGRES_DB: sonarqube
      POSTGRES_USER: root
      POSTGRES_PASSWORD: toor
    volumes:
      - sonar-db:/var/lib/postgresql/data
  openldap:
    image: bitnami/openldap:2.6
    ports:
      - 1389:1389
      # - 1636:1636 # LDAPS
    restart: unless-stopped
    environment: # reference config
      LDAP_ROOT: dc=dev-infra,dc=local
      LDAP_ADMIN_USERNAME: root
      LDAP_ADMIN_PASSWORD: toor
      LDAP_USERS: demo
      LDAP_PASSWORDS: 123Qwe
      LDAP_PASSWORD_HASH: '{SSHA}'
    volumes:
      - openldap_data:/bitnami/openldap
